(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{381:function(t,e,s){"use strict";s.r(e);var a=s(1),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("el-alert",{attrs:{title:"它的优秀之处并非原创， 它的原创之处并不优秀",type:"warning",center:"",closable:!1}}),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),s("ul",[s("li",[t._v("node中的异步I/O调用，回调函数不由开发来调用")]),t._v(" "),s("li",[t._v("javascript发起调用到内核执行完成I/O操作的过渡过程中，存在一种中间产物 --- 叫做"),s("code",[t._v("请求对象")]),t._v(" "),s("ul",[s("li",[s("el-tag",{attrs:{type:"warning"}},[t._v("从javascript调用")]),t._v(" ---\x3e "),s("el-tag",{attrs:{type:"warning"}},[t._v("node核心模块")]),t._v(" ---\x3e "),s("el-tag",{attrs:{type:"warning"}},[t._v("c++内建模块")]),t._v(" ---\x3e "),s("el-tag",{attrs:{type:"warning"}},[t._v("通过libuv进行系统调用")]),t._v("  (node的经典调用方式)\n")],1),t._v(" "),s("li",[t._v("请求对象是异步I/O过程中的重要中间产物，所以的状态都保存在这个对象中，包括送入线程池等待执行以及I/O操作完毕或的回调处理")])])])]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30)],1)}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"异步io"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步io"}},[this._v("#")]),this._v(" 异步IO")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("浏览器中的JavaScript在单线程上执行，与UI渲染共用一个线程")]),this._v(" "),e("li",[this._v("前端通过异步可以消除UI阻塞的现象")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"异步i-o-与-非阻塞i-o"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步i-o-与-非阻塞i-o"}},[this._v("#")]),this._v(" 异步I/O 与 非阻塞I/O")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"非阻塞i-o-（单线程）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非阻塞i-o-（单线程）"}},[this._v("#")]),this._v(" 非阻塞I/O （单线程）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("为了获取完整的数据，应用程序需要重复调用I/O操作来确认是否完成 （轮询）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"轮询技术的演变-（休眠时，cpu是闲置的，不理想）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#轮询技术的演变-（休眠时，cpu是闲置的，不理想）"}},[this._v("#")]),this._v(" 轮询技术的演变 （休眠时，cpu是闲置的，不理想）")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("read")]),t._v(" 原始的、性能最低")]),t._v(" "),s("li",[s("code",[t._v("select")]),t._v(" 通过对文件描述符上的事件状态进行判断\n"),s("ul",[s("li",[t._v("采用 1024 长度的数组来存储状态")]),t._v(" "),s("li",[t._v("最多可以同时检查 1024 个文件描述")])])]),t._v(" "),s("li",[s("code",[t._v("poll")]),t._v(" 链表的方式避免数组长度的限制，避免不需要的检查，\n"),s("ul",[s("li",[t._v("文件描述符较多的时候，性能十分低下")])])]),t._v(" "),s("li",[s("code",[t._v("epoll")]),t._v(" 在进入轮询的时候如果没有检查到I/O事件，将会进行休眠，直到事件唤醒它。\n"),s("ul",[s("li",[t._v("利用了事件通知、执行回调的方式")]),t._v(" "),s("li",[t._v("不是遍历查询")]),t._v(" "),s("li",[t._v("不会浪费CPU，执行效率高")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"linux-aio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-aio"}},[this._v("#")]),this._v(" Linux --\x3e AIO")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("通过信号或者回调来传递数据的 （实现异步I/O）")]),this._v(" "),e("li",[this._v("缺点\n"),e("ul",[e("li",[this._v("只有 Linux 下有")]),this._v(" "),e("li",[this._v("仅支持内核I/O中的O_DIRECT方式读取， 导致无法利用系统缓存")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"异步i-o-（多线程）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步i-o-（多线程）"}},[this._v("#")]),this._v(" 异步I/O （多线程）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("通过让部分线程进行阻塞I/O或者非阻塞I/O加轮询技术来完成数据获取，让一个线程进行计算处理，通过线程之间通信将I/O得到的数据进行传递。实现异步I/O(模拟的)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"node-的异步-i-o"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-的异步-i-o"}},[this._v("#")]),this._v(" Node 的异步 I/O")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("完成整个异步I/O环节的 ---\x3e 事件循环、观察者、请求对象")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"事件循环"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[this._v("#")]),this._v(" 事件循环")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("进程启动时， Node 创建一个类似while(true)的循环事件\n"),s("ul",[s("li",[t._v("每一次执行循环体的过程称为Tick")]),t._v(" "),s("li",[t._v("每个Tick过程就是查看是否有事件待处理")]),t._v(" "),s("li",[t._v("有就取出事件及相关的回调函数")]),t._v(" "),s("li",[t._v("如果存在相关联的回调函数，就执行它")]),t._v(" "),s("li",[t._v("进入下一循环， 不在有事件处理，退出进程")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"观察者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#观察者"}},[this._v("#")]),this._v(" 观察者")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("每个事件循环中有一个或者多个观察者，而判断是否有事件要处理的过程就向这些观察者询问是否有要处理的事件")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"请求对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求对象"}},[this._v("#")]),this._v(" 请求对象")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("一般的（非异步）回调函数, 函数由我们自行调用")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("forEach")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"执行回调"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行回调"}},[this._v("#")]),this._v(" 执行回调")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("组装好请求对象、送入I/O线程等待执行 --\x3e 是 完成"),e("code",[this._v("异步I/O的第一部分")])]),this._v(" "),e("li",[this._v("回调通知 --\x3e是 "),e("code",[this._v("第二部分")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("小记")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Node异步I/O模型的基本要素")]),t._v(" "),s("ul",[s("li",[t._v("事件循环")]),t._v(" "),s("li",[t._v("观察者")]),t._v(" "),s("li",[t._v("请求对象")]),t._v(" "),s("li",[t._v("I/O线程池")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("javascript是单线程的，node是多线程的")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"非-i-o-的异步api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非-i-o-的异步api"}},[this._v("#")]),this._v(" 非 I/O 的异步API")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("setTimeout()")]),this._v(" "),e("li",[this._v("setInterval()")]),this._v(" "),e("li",[this._v("setImmediate()")]),this._v(" "),e("li",[this._v("process.nextTick()")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"定时器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定时器"}},[this._v("#")]),this._v(" 定时器")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("不需要I/O线程池的参与")]),t._v(" "),s("li",[t._v("创建的定时器会被插入到定时器"),s("code",[t._v("观察者")]),t._v("内部的红黑树中")]),t._v(" "),s("li",[t._v("每次Tick执行时，会取出定时器对象， 检查是否超过时间")]),t._v(" "),s("li",[t._v("如果超过，就形成一个事件，它的回调函数将立即执行")]),t._v(" "),s("li",[t._v("它并非精确的(在容忍的范围)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"process-nexttick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-nexttick"}},[this._v("#")]),this._v(" process.nextTick()")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("说明\n"),s("ul",[s("li",[t._v("setTimeout(fn, 0) 需要动用红黑树，较为浪费性能 --- 时间复杂度 O(lg(n))")]),t._v(" "),s("li",[t._v("nextTick() --- 时间复杂的 O(1)")])])]),t._v(" "),s("li",[t._v("每次调用process.nextTick(),只会将回调函数放入队列中")]),t._v(" "),s("li",[t._v("在下一轮Tick时取出执行")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"setimmediate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setimmediate"}},[this._v("#")]),this._v(" setImmediate()")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("process.nextTick() 回调函数保存在"),s("code",[t._v("数组中")])]),t._v(" "),s("li",[t._v("setImmediate() 结果保存在"),s("code",[t._v("链表中")])]),t._v(" "),s("li",[t._v("每轮循环中执行链表中的一个回调函数\n"),s("ul",[s("li",[t._v("顺序执行")]),t._v(" "),s("li",[t._v("保证每轮循环都能较快执行")]),t._v(" "),s("li",[t._v("防止cpu占用过多而阻塞后续的I/O调用情况")])])])])}],!1,null,null,null);e.default=i.exports}}]);